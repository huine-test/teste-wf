# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Flake8

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SHORTSHA: $(git rev-parse --short=4 ${{ github.sha }})

jobs:
  flake8-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-
        restore-keys: ${{ runner.os }}-pip-

    - name: Setup Python 2.7
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: 2.7

    - name: Install Dependencies
      id: setup-dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Flake8 Lint
      id: flake8
      run: |
        flake8 . --count --show-source --statistics

    - name: Minify JS & CSS
      uses: nizarmah/auto-minify@master
      with:
        directory: .

    - name: build Package
      id: build
      run: |
        tar cvzf build.tar.gz  ./*
        echo ::set-output name=sha_short::$(git rev-parse --short=6 ${{ github.sha }})
        echo ::set-output name=release_body::$(git log -1 --pretty=%B)
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.build.outputs.sha_short }}
        release_name: Release ${{ steps.build.outputs.sha_short }}
        body: ${{ steps.build.outputs.release_body }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.tar.gz
        asset_name: build.tar.gz
        asset_content_type: application/gzip
